<%
(function() {
  var application = require('../application_controller.jag')
  //Check authorized User
  application.IsAuthorized()

  //Select the method
  try{
    this[application.actionMapper()]();
  }catch(e){
    print(e.toString());
  }
  
}() )



function index(){
  var Installedwidgets = findInstalledWidgets()

    data = { 
      container_path: 'admin/widgets/index', 
      widgets: Installedwidgets,
    };
  
    include("../../views/layouts/application.jag");  
} // Index method


function show(){
  var Installedwidgets = findInstalledWidgets()
  
  var widget = request.getParameter("name")
  
  data = { 
      container_path: 'admin/widgets/index', 
      widgets: Installedwidgets,
      current_widget: widget
    };
  
  include("../../views/layouts/application.jag"); 

}

function findInstalledWidgets(){
  var Installedwidgets = require('../'+widgetPath +'/widgets.json')
    
    var result = db.query("SELECT * FROM  widgets");

    this.getWidgetData = function(widgetName, result){
      for (var item in result){
        if(result[item]['dir_name'] == widgetName){
          return result[item]
          break;
        }
        else{
          null
        }
      }
    }//getWidgetData

    for (var key in Installedwidgets) {
      if (Installedwidgets.hasOwnProperty(key)) {

          var getWidget = getWidgetData(key, result);
         
          if(getWidget != undefined){
            Installedwidgets[key] = { id: getWidget.id, title: Installedwidgets[key], dir_name: key, state:  getWidget.state}
          }
          else{
            Installedwidgets[key] = { id: null, title: Installedwidgets[key], dir_name: key, state:  false}
          }
      }
    }
    return Installedwidgets;
}


%>